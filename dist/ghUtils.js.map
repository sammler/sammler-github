{"version":3,"sources":["ghUtils.js"],"names":["getAll","ghClient","fnName","options","cb","logger","Error","items","nameSpace","toString","split","resolvedFnName","length","forEach","name","fetchResult","err","res","concat","hasNextPage","getNextPage","returnResult"],"mappings":";;;;;QAYgBA,M,GAAAA,M;;AAZhB;;;;;;AAEA;;;;;;;;;;AAUO,SAASA,MAAT,CAAiBC,QAAjB,EAA2BC,MAA3B,EAAmCC,OAAnC,EAA4CC,EAA5C,EAAiD;;AAEtD,MAAIC,SAAS,sBAAb;;AAEA,MAAK,CAACD,EAAD,IAAO,OAAOA,EAAP,KAAc,UAA1B,EAAuC;AACrC,UAAM,IAAIE,KAAJ,CAAW,qBAAX,CAAN;AACD;;AAED,MAAIC,QAAQ,EAAZ;;AAEA,MAAIC,YAAaN,MAAD,CAASO,QAAT,GAAoBC,KAApB,CAA2B,GAA3B,CAAhB;AACA,MAAIC,iBAAiBV,QAArB;AACA,MAAKO,UAAUI,MAAV,GAAmB,CAAxB,EAA4B;AAC1BJ,cAAUK,OAAV,CAAmB,UAAUC,IAAV,EAAiB;AAClCH,uBAAiBA,eAAgBG,IAAhB,CAAjB;AACD,KAFD;AAGD;AACDH,iBAAgBR,OAAhB,EAAyBY,WAAzB;;AAEA,WAASA,WAAT,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAiC;AAC/B,QAAKD,GAAL,EAAW;AACT,aAAOZ,GAAIY,GAAJ,CAAP;AACD;;AAEDT,YAAQA,MAAMW,MAAN,CAAcD,GAAd,CAAR;AACA,QAAKhB,SAASkB,WAAT,CAAsBF,GAAtB,CAAL,EAAmC;AACjChB,eAASmB,WAAT,CAAsBH,GAAtB,EAA2BF,WAA3B;AACD,KAFD,MAEO;AACLM;AACD;AACF;;AAED,WAASA,YAAT,GAAwB;AACtB,WAAOjB,GAAI,IAAJ,EAAUG,KAAV,CAAP;AACD;AAEF","file":"ghUtils.js","sourcesContent":["import Logger from './logger';\n\n/**\n * Get results from all pages\n *\n * @param {object} ghClient - Authenticated GitHub client\n * @param {string} fnName - The function name, e.g. \"repos.getAll\"\n * @param {object} options - Options for the function tot be called\n * @param {callback} cb - Callback\n *\n * @see https://github.com/mikedeboer/node-github/blob/master/examples/getStarred.js\n */\nexport function getAll( ghClient, fnName, options, cb ) {\n\n  let logger = new Logger();\n\n  if ( !cb || typeof cb !== 'function' ) {\n    throw new Error( 'No callback defined' );\n  }\n\n  let items = [];\n\n  let nameSpace = (fnName).toString().split( '.' );\n  let resolvedFnName = ghClient;\n  if ( nameSpace.length > 0 ) {\n    nameSpace.forEach( function( name ) {\n      resolvedFnName = resolvedFnName[ name ];\n    } );\n  }\n  resolvedFnName( options, fetchResult );\n\n  function fetchResult( err, res ) {\n    if ( err ) {\n      return cb( err );\n    }\n\n    items = items.concat( res );\n    if ( ghClient.hasNextPage( res ) ) {\n      ghClient.getNextPage( res, fetchResult );\n    } else {\n      returnResult();\n    }\n  }\n\n  function returnResult() {\n    return cb( null, items );\n  }\n\n}\n"],"sourceRoot":"/Users/swr/git/sammler/sammler-middleware-github/src"}