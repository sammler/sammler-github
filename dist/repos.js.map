{"version":3,"sources":["repos.js"],"names":["_","gh","ghUtils","repos","base","Error","ghClient","getGhClient","logger","queryOptions","cb","cfg","filter","forked","private","extend","_getRepos","err","res","_saveRepos","options","getAll","_filterRepos","silly"],"mappings":";;;;;;;;AAAA;;IAAYA,C;;AACZ;;IAAYC,E;;AACZ;;IAAYC,O;;;;;;AAEZ;;;IAGqBC,K;AACnB,iBAAaC,IAAb,EAAoB;AAAA;;AAClB,QAAK,CAACA,IAAN,EAAa;AACX,YAAM,IAAIC,KAAJ,CAAW,iBAAX,CAAN;AACD;AACD,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKE,QAAL,GAAgBL,GAAGM,WAAH,EAAhB;;AAEA;AACA,SAAKC,MAAL,GAAc,KAAKJ,IAAL,CAAUI,MAAxB;AACD;;AAED;;;;;;;;;;;;;;;;8BAYWC,Y,EAAcC,E,EAAK;AAAA;;AAE5B,UAAIC,MAAM;AACR,uBAAe,OADP;AAER,oBAAY;AAFJ,OAAV;;AAKA,UAAIC,SAAS;AACXC,gBAAQ,KADG;AAEXC,iBAAS;AAFE,OAAb;;AAKAH,YAAMX,EAAEe,MAAF,CAAUJ,GAAV,EAAeF,gBAAgB,EAA/B,CAAN;AACA,WAAKO,SAAL,CAAgBL,GAAhB,EAAqBC,MAArB,EAA6B,UAAEK,GAAF,EAAOC,GAAP,EAAgB;AAC3C,YAAKD,GAAL,EAAW;AACT,gBAAMA,GAAN;AACD;AACD,cAAKE,UAAL,CAAiBD,GAAjB,EAAsBR,EAAtB;AACD,OALD;AAMD;;AAED;AACA;AACA;;AAEA;;;;;;;;;;;;8BASWU,O,EAASR,M,EAAQF,E,EAAK;AAAA;;AAC/BR,cAAQmB,MAAR,CAAgB,KAAKf,QAArB,EAA+B,cAA/B,EAA+Cc,OAA/C,EAAwD,UAAEH,GAAF,EAAOC,GAAP,EAAgB;AACtEA,cAAM,OAAKI,YAAL,CAAmBJ,GAAnB,EAAwBN,MAAxB,CAAN;AACA,eAAOF,GAAIO,GAAJ,EAASC,GAAT,CAAP;AACD,OAHD;AAID;;AAED;;;;;;;;;;;iCAQcf,K,EAAOS,M,EAAS;AAC5B,WAAKJ,MAAL,CAAYe,KAAZ,CAAmB,cAAnB,EAAmCpB,KAAnC,EAA0CS,MAA1C;AACA,aAAOZ,EAAEY,MAAF,CAAUT,KAAV,EAAiBS,UAAU,EAA3B,CAAP;AACD;;AAED;;;;;;;;;+BAMYT,K,EAAOO,E,EAAK;AACtB,WAAKF,MAAL,CAAYe,KAAZ,CAAmB,YAAnB;AACAb;AACD;;;;;;kBAvFkBP,K","file":"repos.js","sourcesContent":["import * as _ from 'lodash';\nimport * as gh from './gh';\nimport * as ghUtils from './ghUtils';\n\n/**\n * Handle GitHub repositories.\n */\nexport default class repos {\n  constructor( base ) {\n    if ( !base ) {\n      throw new Error( 'No base defined' );\n    }\n    this.base = base;\n    this.ghClient = gh.getGhClient();\n\n    // shortcuts\n    this.logger = this.base.logger;\n  }\n\n  /**\n   * Sync all existing repositories.\n   *\n   * @description\n   *\n   * The repositories will be filtered as follows:\n   * - Forked repositories are ignored.\n   *\n   * @param {object} queryOptions - Configuration options for repos.getAll (as defined on http://mikedeboer.github.io/node-github/#api-users-getAll & http://mikedeboer.github.io/node-github/#api-repos-getAll)\n   * @param {callback} cb - Callback\n   * @public\n   */\n  syncRepos( queryOptions, cb ) {\n\n    var cfg = {\n      \"affiliation\": \"owner\",\n      \"per_page\": 100\n    };\n\n    var filter = {\n      forked: false,\n      private: false\n    };\n\n    cfg = _.extend( cfg, queryOptions || {} );\n    this._getRepos( cfg, filter, ( err, res ) => {\n      if ( err ) {\n        throw err;\n      }\n      this._saveRepos( res, cb );\n    } );\n  }\n\n  // *****************************************************************************\n  // Internal helper methods\n  // *****************************************************************************\n\n  /**\n   * Load repositories for the given (current authenticated) user.\n   *\n   * @param {object} options - The query options.\n   * @param {callback} cb - Callback\n   * @param {object} filter - Result filter (client side).\n   *\n   * @private\n   */\n  _getRepos( options, filter, cb ) {\n    ghUtils.getAll( this.ghClient, 'repos.getAll', options, ( err, res ) => {\n      res = this._filterRepos( res, filter );\n      return cb( err, res );\n    } );\n  }\n\n  /**\n   * Filter repositories\n   * @param {Array<repos>} repos - The array of repositories.\n   * @param {Object} filter - Filters, such as `private`, `forked`, ...\n   * @returns {Array<repos>} repos - Array of filtered repos.\n   *\n   * @private\n   */\n  _filterRepos( repos, filter ) {\n    this.logger.silly( 'Filter repos', repos, filter );\n    return _.filter( repos, filter || {} )\n  }\n\n  /**\n   * Save repos to storage.\n   * @param repos\n   * @param cb\n   * @private\n   */\n  _saveRepos( repos, cb ) {\n    this.logger.silly( 'Save repos' );\n    cb();\n  }\n}\n"],"sourceRoot":"/Users/swr/git/sammler/sammler-middleware-github/src"}